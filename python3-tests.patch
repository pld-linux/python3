diff -urNp -x '*.orig' Python-3.9.2.org/Lib/test/test_imaplib.py Python-3.9.2/Lib/test/test_imaplib.py
--- Python-3.9.2.org/Lib/test/test_imaplib.py	2021-02-19 13:31:44.000000000 +0100
+++ Python-3.9.2/Lib/test/test_imaplib.py	2021-02-25 18:42:23.540101637 +0100
@@ -77,7 +77,7 @@ class TestImaplib(unittest.TestCase):
     @socket_helper.skip_if_tcp_blackhole
     def test_imap4_host_default_value(self):
         # Check whether the IMAP4_PORT is truly unavailable.
-        with socket.socket() as s:
+        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
             try:
                 s.connect(('', imaplib.IMAP4_PORT))
                 self.skipTest(
@@ -85,7 +85,7 @@ class TestImaplib(unittest.TestCase):
         # This is the exception that should be raised.
         expected_errnos = socket_helper.get_socket_conn_refused_errs()
         with self.assertRaises(OSError) as cm:
-            imaplib.IMAP4()
+            imaplib.IMAP4('0.0.0.0')
         self.assertIn(cm.exception.errno, expected_errnos)
 
 
--- a/Lib/test/test_site.py	2024-10-07 07:02:14.000000000 +0200
+++ b/Lib/test/test_site.py.new	2024-10-08 14:14:57.416459147 +0200
@@ -326,14 +326,14 @@ class HelperFunctionsTests(unittest.Test
         if os.sep == '/':
             # OS X, Linux, FreeBSD, etc
             if sys.platlibdir != "lib":
-                self.assertEqual(len(dirs), 2)
+                self.assertEqual(len(dirs), 6)
                 wanted = os.path.join('xoxo', sys.platlibdir,
                                       f'python{sysconfig._get_python_version_abi()}',
                                       'site-packages')
                 self.assertEqual(dirs[0], wanted)
             else:
                 self.assertEqual(len(dirs), 1)
-            wanted = os.path.join('xoxo', 'lib',
+            wanted = os.path.join('xoxo', 'share',
                                   f'python{sysconfig._get_python_version_abi()}',
                                   'site-packages')
             self.assertEqual(dirs[-1], wanted)
